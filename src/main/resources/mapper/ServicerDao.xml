<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--类名-->
<mapper namespace="com.house.dao.ServicerDao">

    <sql id="Base_Column_List">
               s.servicer_id,
        s.servicer_idnum,
        s.servicer_name,
        s.servicer_age,
        s.servicer_sex,
        s.servicer_phone,
        s.servicer_img,
        s.servicer_experience,
        s.servicer_score,
        s.servicer_price,
        s.servicer_des,
        s.servicer_file,
        s.servicer_contract,
        s.create_time,
        s.lastedit_time,
        s.enable_status,
        s.check_status,
        s.account_name,
        s.pass_word,
        d.degree_id,
        d.degree_name,
        d.priority as dpriority,
        st.servicetype_id,
        st.servicetype_name,
        st.priority as stpriority,
        c.workarea_id as city_id,
        c.workarea_name as city_name,
        c.priority as cpriority,
        l.workarea_id as local_id,
        l.workarea_name as local_name,
        l.priority as lpriority
    </sql>

    <resultMap type="com.house.entity.Servicer" id="servicermap">
        <id column="servicer_id" property="servicerid"/>
        <result column="servicer_idnum" property="serviceridnum"/>
        <result column="servicer_name" property="servicername"/>
        <result column="servicer_age" property="servicerage"/>
        <result column="servicer_sex" property="servicersex"/>
        <result column="servicer_phone" property="servicerphone"/>
        <result column="servicer_img" property="servicerimg"/>
        <result column="servicer_experience" property="servicerexperience"/>
        <result column="servicer_score" property="servicerscore"/>
        <result column="servicer_price" property="servicerprice"/>
        <result column="servicer_des" property="servicerdes"/>
        <result column="servicer_file" property="servicerfile"/>
        <result column="servicer_contract" property="servicerfile"/>
        <result column="create_time" property="createtime"/>
        <result column="lastedit_time" property="lastedittime"/>
        <result column="enable_status" property="enablestatus"/>
        <result column="check_status" property="checkstatus"/>
        <result column="account_name" property="accountname"/>
        <result column="pass_word" property="password"/>
        <association property="degree" column="degree_id" javaType="com.house.entity.Degree">
            <id column="degree_id" property="degreeid"/>
            <result column="degree_name" property="degreename"/>
            <result column="dpriority" property="priority"/>
        </association>
        <association property="servicetype" column="servicetype_id" javaType="com.house.entity.ServiceType">
            <id column="servicetype_id" property="servicetypeid"/>
            <result column="servicetype_name" property="servicetypename"/>
            <result column="stpriority" property="priority"/>
        </association>
        <!--相同类型属性通过列别名区分查询-->
        <association property="city" column="city_id" javaType="com.house.entity.WorkArea">
            <id column="city_id" property="workareaid"/>
            <result column="city_name" property="workareaname"/>
            <result column="cpriority" property="priority"/>
        </association>
        <!--相同类型属性通过列别名区分查询-->
        <association property="local" column="local_id" javaType="com.house.entity.WorkArea">
            <id column="local_id" property="workareaid"/>
            <result column="local_name" property="workareaname"/>
            <result column="lpriority" property="priority"/>
        </association>
    </resultMap>

    <insert id="insertServicer" parameterType="com.house.entity.Servicer" useGeneratedKeys="true"
            keyColumn="servicer_id" keyProperty="servicerid">
        insert into
        tb_servicer(servicer_idnum,
                    servicer_name,
                    servicer_age,
                    servicer_sex,
                    servicer_phone,
                    servicer_des,
                    create_time,
                    enable_status,
                    check_status,
                    account_name,
                    pass_word)
    values(#{serviceridnum,jdbcType=VARCHAR},
            #{servicername,jdbcType=VARCHAR},
            #{servicerage,jdbcType=INTEGER},
            #{servicersex,jdbcType=INTEGER},
            #{servicerphone,jdbcType=VARCHAR},
            #{servicerdes,jdbcType=VARCHAR},
            #{createtime,jdbcType=TIMESTAMP},
            #{enablestatus,jdbcType=INTEGER},
            #{checkstatus,jdbcType=INTEGER},
            #{accountname,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR})
    </insert>

    <update id="updateServicer" parameterType="com.house.entity.Servicer">
        update tb_servicer
        <set>
            <if test="servicer.servicerid != null">
                servicer_id = #{servicer.servicerid,jdbcType=INTEGER},
            </if>
            <if test="servicer.serviceridnum != null">
                servicer_idnum = #{servicer.serviceridnum,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicername != null">
                servicer_name = #{servicer.servicername,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicerage != null">
                servicer_age = #{servicer.servicerage,jdbcType=INTEGER},
            </if>
            <if test="servicer.servicersex != null">
                servicer_sex = #{servicer.servicersex,jdbcType=INTEGER},
            </if>
            <if test="servicer.servicerphone != null">
                servicer_phone = #{servicer.servicerphone,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicerimg != null">
                servicer_img = #{servicer.servicerimg,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicerexperience != null">
                servicer_experience = #{servicer.servicerexperience,jdbcType=INTEGER},
            </if>
            <if test="servicer.servicerscore != null">
                servicer_score = #{servicer.servicerscore,jdbcType=INTEGER},
            </if>
            <if test="servicer.servicerprice != null">
                servicer_price = #{servicer.servicerprice,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicerdes != null">
                servicer_des = #{servicer.servicerdes,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicerdes != null">
                servicer_contract = #{servicer.servicercontract,jdbcType=VARCHAR},
            </if>
            <if test="servicer.servicerfile != null">
                servicer_file = #{servicer.servicerfile,jdbcType=VARCHAR},
            </if>
            <if test="servicer.city != null &amp;&amp; servicer.city.workareaid != 0">
                city_id = #{servicer.city.workareaid,jdbcType=INTEGER},
            </if>
            <if test="servicer.local != null &amp;&amp; servicer.local.workareaid != 0">
                local_id = #{servicer.local.workareaid,jdbcType=INTEGER},
            </if>
            <if test="servicer.createtime != null">
                create_time = #{servicer.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="servicer.lastedittime != null">
                lastedit_time = #{servicer.lastedittime,jdbcType=TIMESTAMP},
            </if>
            <if test="servicer.enablestatus != null">
                enable_status = #{servicer.enablestatus,jdbcType=INTEGER},
            </if>
            <if test="servicer.checkstatus != null">
                check_status = #{servicer.checkstatus,jdbcType=INTEGER},
            </if>
            <if test="servicer.accountname != null">
                account_name = #{servicer.accountname,jdbcType=VARCHAR},
            </if>
            <if test="servicer.password != null">
                pass_word = #{servicer.password,jdbcType=VARCHAR},
            </if>
            <if test="servicer.degree != null &amp;&amp; servicer.degree.degreeid != 0">
                degree_id = #{servicer.degree.degreeid,jdbcType=INTEGER},
            </if>
            <if test="servicer.servicetype != null &amp;&amp; servicer.servicetype.servicetypeid != 0">
                servicetype_id = #{servicer.servicetype.servicetypeid,jdbcType=INTEGER},
            </if>
        </set>
        where servicer_id=#{servicer.servicerid}
    </update>

    <select id="queryServicer" resultMap="servicermap">
        select
      <include refid="Base_Column_List"/>
        from tb_servicer s
        left join tb_degree d
        on s.degree_id=d.degree_id
        left join tb_servicetype st
        on s.servicetype_id=st.servicetype_id
        left join tb_workarea c
        on s.city_id=c.workarea_id
        left join tb_workarea l
        on s.local_id=l.workarea_id
        and s.servicetype_id=st.servicetype_id
        and s.city_id=c.workarea_id
        and s.local_id=l.workarea_id
        <!--<where>-->
            <!--and s.degree_id=d.degree_id-->
            <!--and s.servicetype_id=st.servicetype_id-->
            <!--and s.city_id=c.workarea_id-->
            <!--and s.local_id=l.workarea_id-->
        <!--</where>-->
    </select>

    <select id="querySingleServicer" resultMap="servicermap">
        select
        <include refid="Base_Column_List"/>
        from tb_servicer s
        left join tb_degree d
        on s.degree_id=d.degree_id
        left join tb_servicetype st
        on s.servicetype_id=st.servicetype_id
        left join tb_workarea c
        on s.city_id=c.workarea_id
        left join tb_workarea l
        on s.local_id=l.workarea_id
        <where>
            <if test="condition.servicerid != 0">and servicer_id=#{condition.servicerid}</if>
            <if test="condition.accountname != null">and account_name=#{condition.accountname}</if>
            <if test="condition.password != null">and pass_word=#{condition.password}</if>
        </where>
    </select>

    <select id="queryQualify" resultType="com.house.entity.Servicer">
        select servicer_id,servicer_name,lastedit_time,check_status
        from tb_servicer
        where
        check_status=#{checkstatus}
        order by lastedit_time desc
    </select>

    <select id="queryServicerForUser" resultMap="servicermap">
        select
        <include refid="Base_Column_List"/>
        from tb_servicer s,tb_degree d,tb_servicetype st,tb_workarea c,tb_workarea l
        <where>
            <if test="condition.servicersex != -1">
                and s.servicer_sex=#{condition.servicersex}
            </if>
            <if test="condition.servicerage != -1">
                and s.servicer_age between #{condition.servicerage} and #{condition.servicerage}+9
            </if>
            <if test="condition.servicerexperience != -1">
                and s.servicer_experience&gt;#{condition.servicerexperience}
            </if>
            <if test="condition.servicerscore != -1">
                and s.servicer_score=#{condition.servicerscore}
            </if>
            <choose>
                <when test="condition.servicerprice != -1 &amp;&amp; condition.servicerprice != 2999 &amp;&amp; condition.servicerprice != 7000">
                    and s.servicer_price between #{condition.servicerprice} and #{condition.servicerprice}+999
                </when>
                <when test="condition.servicerprice == 2999">
                    and s.servicer_price&lt;=#{condition.servicerprice}
                </when>
                <when test="condition.servicerprice == 7000">
                    and s.servicer_price&gt;=#{condition.servicerprice}
                </when>
            </choose>
            <if test="condition.degree != null and condition.degree.degreeid != -1">
                and s.degree_id=#{condition.degree.degreeid}
                and d.degree_id=#{condition.degree.degreeid}
            </if>
            <if test="condition.servicetype != null and condition.servicetype.servicetypeid != -1">
                and s.servicetype_id=#{condition.servicetype.servicetypeid}
                and st.servicetype_id=#{condition.servicetype.servicetypeid}
            </if>
            <if test="condition.city != null and condition.city.workareaid != -1">
                and s.city_id=#{condition.city.workareaid}
                and c.workarea_id=#{condition.city.workareaid}
            </if>
            <if test="condition.local != null and condition.local.workareaid != -1">
                and s.local_id=#{condition.local.workareaid}
                and l.workarea_id=#{condition.local.workareaid}
            </if>
            and s.degree_id=d.degree_id
            and s.servicetype_id=st.servicetype_id
            and s.city_id=c.workarea_id
            and s.local_id=l.workarea_id
            and enable_status=1
            and check_status=2
        </where>
        order by
        <choose>
            <when test="order == 'lastedittime'">
                s.lastedit_time
            </when>
            <when test="order == 'price'">
                s.servicer_price
            </when>
            <otherwise>
                s.servicer_score
            </otherwise>
        </choose>
        desc
        limit #{index},#{size};
    </select>

    <select id="queryServicerCount" resultType="int">
        select
        count(1)
        from tb_servicer s,tb_degree d,tb_servicetype st,tb_workarea c,tb_workarea l
        <where>
            <if test="condition.servicersex != -1">
                and s.servicer_sex=#{condition.servicersex}
            </if>
            <if test="condition.servicerage != -1">
                and s.servicer_age between #{condition.servicerage} and #{condition.servicerage}+9
            </if>
            <if test="condition.servicerexperience != -1">
                and s.servicer_experience&gt;#{condition.servicerexperience}
            </if>
            <if test="condition.servicerscore != -1">
                and s.servicer_score=#{condition.servicerscore}
            </if>
            <choose>
                <when test="condition.servicerprice != -1 &amp;&amp; condition.servicerprice != 2999 &amp;&amp; condition.servicerprice != 7000">
                    and s.servicer_price between #{condition.servicerprice} and #{condition.servicerprice}+999
                </when>
                <when test="condition.servicerprice == 2999">
                    and s.servicer_price&lt;=#{condition.servicerprice}
                </when>
                <when test="condition.servicerprice == 7000">
                    and s.servicer_price&gt;=#{condition.servicerprice}
                </when>
            </choose>
            <if test="condition.degree != null and condition.degree.degreeid != -1">
                and s.degree_id=#{condition.degree.degreeid}
                and d.degree_id=#{condition.degree.degreeid}
            </if>
            <if test="condition.servicetype != null and condition.servicetype.servicetypeid != -1">
                and s.servicetype_id=#{condition.servicetype.servicetypeid}
                and st.servicetype_id=#{condition.servicetype.servicetypeid}
            </if>
            <if test="condition.city != null and condition.city.workareaid != -1">
                and s.city_id=#{condition.city.workareaid}
                and c.workarea_id=#{condition.city.workareaid}
            </if>
            <if test="condition.local != null and condition.local.workareaid != -1">
                and s.local_id=#{condition.local.workareaid}
                and l.workarea_id=#{condition.local.workareaid}
            </if>
            and s.degree_id=d.degree_id
            and s.servicetype_id=st.servicetype_id
            and s.city_id=c.workarea_id
            and s.local_id=l.workarea_id
            and enable_status=1
            and check_status=2
        </where>
    </select>
</mapper>